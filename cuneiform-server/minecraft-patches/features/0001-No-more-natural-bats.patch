From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lexie Malina <alex@t-ch.net>
Date: Mon, 13 Jan 2025 09:09:48 -0600
Subject: [PATCH] No more natural bats


diff --git a/net/minecraft/world/entity/ambient/Bat.java b/net/minecraft/world/entity/ambient/Bat.java
index 5ebe7b1dce367d5c5e1136b97b2b9f6737595201..3cf4e3a302a17a5e2ffd733f0ecb77a41fe9ce4c 100644
--- a/net/minecraft/world/entity/ambient/Bat.java
+++ b/net/minecraft/world/entity/ambient/Bat.java
@@ -23,6 +23,7 @@ import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
+import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockState;
@@ -226,6 +227,10 @@ public class Bat extends AmbientCreature {
     public static boolean checkBatSpawnRules(
         EntityType<Bat> entityType, LevelAccessor level, EntitySpawnReason spawnReason, BlockPos pos, RandomSource randomSource
     ) {
+      // Cuneiform START - No more natural bats
+        if (!level.getMinecraftWorld().getGameRules().getBoolean(GameRules.RULE_DO_BAT_SPAWN))
+            return false;
+        
         if (pos.getY() >= level.getHeightmapPos(Heightmap.Types.WORLD_SURFACE, pos).getY()) {
             return false;
         } else {
@@ -241,6 +246,7 @@ public class Bat extends AmbientCreature {
                 && level.getBlockState(pos.below()).is(BlockTags.BATS_SPAWNABLE_ON)
                 && checkMobSpawnRules(entityType, level, spawnReason, pos, randomSource);
         }
+        // Cuneiform END
     }
 
     private static boolean isHalloween() {
diff --git a/net/minecraft/world/level/GameRules.java b/net/minecraft/world/level/GameRules.java
index b21337d826ad33ce874301b070ad7f5361a2a493..7fcbde2cc8be51559a9cad341e329d6f6a1a1283 100644
--- a/net/minecraft/world/level/GameRules.java
+++ b/net/minecraft/world/level/GameRules.java
@@ -221,6 +221,13 @@ public class GameRules {
             serverLevel.setDefaultSpawnPos(serverLevel.getSharedSpawnPos(), serverLevel.getSharedSpawnAngle());
         })
     );
+
+    // Cuneiform START - Disable Bat Spawning gamerule.
+    public static final GameRules.Key<GameRules.BooleanValue> RULE_DO_BAT_SPAWN = register(
+            "doBatSpawn", GameRules.Category.SPAWNING, GameRules.BooleanValue.create(false)
+    );
+    // Cuneiform END
+
     private final Map<GameRules.Key<?>, GameRules.Value<?>> rules;
     private final FeatureFlagSet enabledFeatures;
     private final GameRules.Value<?>[] gameruleArray; // Paper - Perf: Use array for gamerule storage
@@ -248,6 +255,7 @@ public class GameRules {
         return GAME_RULE_TYPES.entrySet().stream().filter(entry -> entry.getValue().requiredFeatures.isSubsetOf(enabledFeatures));
     }
 
+
     private GameRules(Map<GameRules.Key<?>, GameRules.Value<?>> rules, FeatureFlagSet enabledFeatures) {
         this.rules = rules;
         this.enabledFeatures = enabledFeatures;
