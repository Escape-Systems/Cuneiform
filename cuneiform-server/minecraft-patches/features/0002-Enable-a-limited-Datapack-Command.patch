From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lexie Malina <alex@t-ch.net>
Date: Mon, 23 Jun 2025 14:18:01 -0500
Subject: [PATCH] Enable a limited Datapack Command


diff --git a/net/minecraft/commands/Commands.java b/net/minecraft/commands/Commands.java
index 77ae04eee3080ffffe16e398c58f0622ce522f70..819f55f1d8c18ebbc59f1e1648296aac940a1b4d 100644
--- a/net/minecraft/commands/Commands.java
+++ b/net/minecraft/commands/Commands.java
@@ -188,7 +188,7 @@ public class Commands {
         ClearInventoryCommands.register(this.dispatcher, context);
         //CloneCommands.register(this.dispatcher, context); // Folia - region threading - TODO
         DamageCommand.register(this.dispatcher, context);
-        //DataCommands.register(this.dispatcher); // Folia - region threading - TODO
+        DataPackCommand.register(this.dispatcher, context); // Folia - region threading // Cuneiform - Enable Datapack listing but no enable/disable
         //DataPackCommand.register(this.dispatcher, context); // Folia - region threading - TODO
         //DebugCommand.register(this.dispatcher); // Folia - region threading - TODO
         DefaultGameModeCommands.register(this.dispatcher);
diff --git a/net/minecraft/server/commands/DataPackCommand.java b/net/minecraft/server/commands/DataPackCommand.java
index 3eaa9c85d06f6ecc8ed639d8befa861439390eb7..fb77a97deadba1ed61190d06d4badb7bc1e55ce8 100644
--- a/net/minecraft/server/commands/DataPackCommand.java
+++ b/net/minecraft/server/commands/DataPackCommand.java
@@ -98,69 +98,71 @@ public class DataPackCommand {
         dispatcher.register(
             Commands.literal("datapack")
                 .requires(Commands.hasPermission(2))
-                .then(
-                    Commands.literal("enable")
-                        .then(
-                            Commands.argument("name", StringArgumentType.string())
-                                .suggests(UNSELECTED_PACKS)
-                                .executes(
-                                    context -> enablePack(
-                                        context.getSource(),
-                                        getPack(context, "name", true),
-                                        (currentPacks, pack) -> pack.getDefaultPosition().insert(currentPacks, pack, Pack::selectionConfig, false)
-                                    )
-                                )
-                                .then(
-                                    Commands.literal("after")
-                                        .then(
-                                            Commands.argument("existing", StringArgumentType.string())
-                                                .suggests(SELECTED_PACKS)
-                                                .executes(
-                                                    commandContext -> enablePack(
-                                                        commandContext.getSource(),
-                                                        getPack(commandContext, "name", true),
-                                                        (currentPacks, pack) -> currentPacks.add(
-                                                            currentPacks.indexOf(getPack(commandContext, "existing", false)) + 1, pack
-                                                        )
-                                                    )
-                                                )
-                                        )
-                                )
-                                .then(
-                                    Commands.literal("before")
-                                        .then(
-                                            Commands.argument("existing", StringArgumentType.string())
-                                                .suggests(SELECTED_PACKS)
-                                                .executes(
-                                                    context -> enablePack(
-                                                        context.getSource(),
-                                                        getPack(context, "name", true),
-                                                        (currentPacks, pack) -> currentPacks.add(
-                                                            currentPacks.indexOf(getPack(context, "existing", false)), pack
-                                                        )
-                                                    )
-                                                )
-                                        )
-                                )
-                                .then(Commands.literal("last").executes(context -> enablePack(context.getSource(), getPack(context, "name", true), List::add)))
-                                .then(
-                                    Commands.literal("first")
-                                        .executes(
-                                            context -> enablePack(
-                                                context.getSource(), getPack(context, "name", true), (currentPacks, pack) -> currentPacks.add(0, pack)
-                                            )
-                                        )
-                                )
-                        )
-                )
-                .then(
-                    Commands.literal("disable")
-                        .then(
-                            Commands.argument("name", StringArgumentType.string())
-                                .suggests(SELECTED_PACKS)
-                                .executes(commandContext -> disablePack(commandContext.getSource(), getPack(commandContext, "name", false)))
-                        )
-                )
+//                Cuneiform START - Enable Datapack listing but no enable/disable
+//                .then(
+//                    Commands.literal("enable")
+//                        .then(
+//                            Commands.argument("name", StringArgumentType.string())
+//                                .suggests(UNSELECTED_PACKS)
+//                                .executes(
+//                                    context -> enablePack(
+//                                        context.getSource(),
+//                                        getPack(context, "name", true),
+//                                        (currentPacks, pack) -> pack.getDefaultPosition().insert(currentPacks, pack, Pack::selectionConfig, false)
+//                                    )
+//                                )
+//                                .then(
+//                                    Commands.literal("after")
+//                                        .then(
+//                                            Commands.argument("existing", StringArgumentType.string())
+//                                                .suggests(SELECTED_PACKS)
+//                                                .executes(
+//                                                    commandContext -> enablePack(
+//                                                        commandContext.getSource(),
+//                                                        getPack(commandContext, "name", true),
+//                                                        (currentPacks, pack) -> currentPacks.add(
+//                                                            currentPacks.indexOf(getPack(commandContext, "existing", false)) + 1, pack
+//                                                        )
+//                                                    )
+//                                                )
+//                                        )
+//                                )
+//                                .then(
+//                                    Commands.literal("before")
+//                                        .then(
+//                                            Commands.argument("existing", StringArgumentType.string())
+//                                                .suggests(SELECTED_PACKS)
+//                                                .executes(
+//                                                    context -> enablePack(
+//                                                        context.getSource(),
+//                                                        getPack(context, "name", true),
+//                                                        (currentPacks, pack) -> currentPacks.add(
+//                                                            currentPacks.indexOf(getPack(context, "existing", false)), pack
+//                                                        )
+//                                                    )
+//                                                )
+//                                        )
+//                                )
+//                                .then(Commands.literal("last").executes(context -> enablePack(context.getSource(), getPack(context, "name", true), List::add)))
+//                                .then(
+//                                    Commands.literal("first")
+//                                        .executes(
+//                                            context -> enablePack(
+//                                                context.getSource(), getPack(context, "name", true), (currentPacks, pack) -> currentPacks.add(0, pack)
+//                                            )
+//                                        )
+//                                )
+//                        )
+//                )
+//                .then(
+//                    Commands.literal("disable")
+//                        .then(
+//                            Commands.argument("name", StringArgumentType.string())
+//                                .suggests(SELECTED_PACKS)
+//                                .executes(commandContext -> disablePack(commandContext.getSource(), getPack(commandContext, "name", false)))
+//                        )
+//                )
+//                Cuneiform END
                 .then(
                     Commands.literal("list")
                         .executes(commandContext -> listPacks(commandContext.getSource()))
